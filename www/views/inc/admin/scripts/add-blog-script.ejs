<script type="text/javascript" src="https://cdn.tiny.cloud/1/mnhe8mkhfadk24d7pbtvd880370fc3jyxr34fxx0csiks0gt/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
<script>
    $(document).ready(function(){
        // CKEDITOR.replace('contentSummernote', {
        //     language: 'vi',
        //     // filebrowserBrowseUrl: '/admin/get-imgs',
        //     filebrowserUploadUrl: '/admin/upload-imgs',
        //     height: 600,
        //     // extraAllowedContent: 'a span',
        //     enterMode : CKEDITOR.ENTER_BR,
        //     shiftEnterMode: CKEDITOR.ENTER_P
        // });
        // /**
        //  * REMOVE AUTO PASTE và tạo thẻ <p> và không style các thẻ heading trên 1 dòng
        //  * lưu ý: phải enter
        //  */ 
        // CKEDITOR.config.autoParagraph = false;
        // /**
        //  * loại bỏ entities trong html5 khi paste vào
        //  */ 
        // CKEDITOR.config.entities = false;
        // // DecoupledEditor
        // // .create( document.querySelector( '#contentSummernote' ), {
        // //     UploadAdapter: {
        // //         // tokenUrl: 'https://example.com/cs-token-endpoint',
        // //         uploadUrl: '/admin/upload-imgs'
        // //     }
        // // } )
        // // .then( editor => {
        // //     const toolbarContainer = document.querySelector( '#toolbar-container' );

        // //     toolbarContainer.appendChild( editor.ui.view.toolbar.element );
        // // } )
        // // .catch( error => {
        // //     console.error( error );
        // // } );
        // // $('#contentSummernote').summernote({
        // //     height: 620,
        // //     popover: {
        // //         image: [],
        // //         link: [],
        // //         air: []
        // //     },
        // // });

        function initEditor(selector, options = {}, cb = null, cbUploadImage = null) {
		tinyMCE.init({
			selector,
			plugins: [
				'advlist autolink lists link image charmap print preview anchor codesample',
				'searchreplace visualblocks code fullscreen quickbars hr nonbreaking pagebreak',
				'insertdatetime media table paste imagetools wordcount emoticons' // formatpainter powerpaste
			],
			toolbar: 'undo redo | styleselect | bold italic | forecolor backcolor |' +
					'alignleft aligncenter alignright alignjustify |' +
					'outdent indent | numlist bullist | emoticons nonbreaking | fullscreen',
			menubar: 'file edit insert view format table tools custom',
			advlist_bullet_styles: 'default,square,circle,disc',
			quickbars_selection_toolbar: 'bold italic | forecolor backcolor | formatselect | quicklink blockquote',
			quickbars_insert_toolbar: 'nonbreaking | quicktable | numlist bullist | outdent indent | hr pagebreak | emoticons', // quickimage
			menu: {
				custom: { title: 'Lists', items: 'customBulletLine customBulletPlus' }
			},
			nonbreaking_force_tab: true,
			lists_indent_on_tab: true,
			statusbar: true,
			draggable_modal: true,
			branding: false,
			fullscreen_native: true,
			height: 250,
			toolbar_mode: 'floating',
			placeholder: 'Type here...',
			default_link_target: '_blank',
			paste_word_valid_elements: "b,strong,i,em,h1,h2",
			paste_enable_default_filters: false,
			mobile: {
				resize: false
			},
			image: null,
			// paste_preprocess: function(plugin, args) {
			// 	args.content += ' ';
			// },
			// indent_use_margin: true,
			// image_title: true,
			// file_picker_types: 'file image',
			// images_file_types: 'jpeg,jpg,png,bmp,webp',
			// paste_as_text: true,
			paste_data_images: false,
			file_picker_callback: function(cb, value, meta){
				let input = document.createElement('input');
				input.setAttribute('type', 'file');
				input.setAttribute('accept', 'image/*');
				let that = this;

				input.onchange = function () {
					let file = this.files[0];
					that.image = file;

					let reader = new FileReader();
					reader.onload = function (e) {
						let id = 'blobid' + (new Date()).getTime();
						let blobCache =  tinymce.activeEditor.editorUpload.blobCache;
						let base64 = reader.result.split(',')[1];
						let blobInfo = blobCache.create(id, file, base64);
						blobCache.add(blobInfo);
						// console.log({ file, blobCache, base64, blobInfo, uri: blobInfo.blobUri() });

						/* call the callback and populate the Title field with the file name */
						cb(blobInfo.blobUri(), { title: file.name, alt: file.name });
					};
					reader.readAsDataURL(file);
				};

				input.click();
				input.remove();
			},
			setup: function(editor){
				editor.on('OpenWindow', e => {
					let that = this;
					$('.tox-button[title="Save"]').off('click').on('click', function() {
						if(e.target.image && {}.toString.call(cbUploadImage) === '[object Function]'){
							$(this).prop('disabled', true);

							// cbUploadImage(e.target.image, (uri, file) => {
							// 	// console.log({ ___uri: uri, __file: file });
							// 	$(this).prop('disabled', false);

							// 	e.target.windowManager.close();
							// 	that.image = null;
							// 	tinyMCE.activeEditor.execCommand('mceInsertContent', false, `
							// 		<img src="${uri}" width="300" height="239" alt=${file.path} />
							// 	`);
							// }, that);
						}
					})
				})

				editor.on('KeyDown', e => {
					// console.log({ __code: e.keyCode, char, currentChar, __key: e.key });

					if ((e.keyCode == 8 || e.keyCode == 46) && editor.selection) { // delete & backspace keys
						const selectedNode = editor.selection.getNode(); // get the selected node (element) in the editor

						if (selectedNode && selectedNode.nodeName == 'IMG') {
							const { src, title, alt } = selectedNode;

							$.ajax({
								type: "POST",
								url: "/pcm/remove-file-editor",
								data: { path: alt }
							}).done(resp => {
								console.log({ resp });
							}).fail(err => console.error(err))
						}
					}

					if (e.keyCode === 9) { // tab pressed
						if (e.shiftKey) {
							editor.execCommand('Outdent');
						}else {
							editor.execCommand('Indent');
						}

						e.preventDefault();
						return false;
					}
				});

				editor.ui.registry.addMenuItem('customBulletLine', {
					text: 'Bullet line',
					icon: 'horizontal-rule',
					tooltip: 'Insert Bullet Line',
					onAction: function (_) {
						editor.execCommand('mceInsertContent', false, `<li style="list-style-type: '- '"> </li>`);
					}
				});

				editor.ui.registry.addMenuItem('customBulletPlus', {
					text: 'Bullet plus',
					icon: 'plus',
					tooltip: 'Insert Bullet Plus',
					onAction: function (_) {
						editor.execCommand('mceInsertContent', false, `<li style="list-style-type: '+ '"> </li>`);
					}
				});

				// editor.on('Paste', e => {
				// 	console.log({ __pasteEvent: e });
				// })

				// editor.on('Undo', e => {
				// 	console.log({ e });
				// 	const selectedNode = editor.selection.getNode();
				// 	if (selectedNode && selectedNode.nodeName == 'IMG') {
				// 		console.log('Undo: ', { __node: selectedNode.nodeName });
				// 		e.target.undoManager.clear();
				// 	}
				// })

				if(cb && {}.toString.call(cb) === '[object Function]'){
					cb(editor);
				}
			},
			...options,
		});
        }
    //


        initEditor("#tinytable");
        <%if(blog){%>
        setTimeout(function(){
            $.ajax({
                url:`/admin/details-blog?blogID=<%=blog && blog._id%>`,
                method:'get',
                success: function(resp){
                    tinyMCE.get('tinytable').setContent(resp.content);
                },
                error : function(err){
                    console.log({ err })
                }
            })
        },1000);
        <%}%>
       
        let getFormBlog = () => {
            let title, description, content, category, tag, status, isFeature, yoastTitle, yoastDescription, yoastFocus, slug, authorOrigin, lang;
            title = $('#txtTitle').val();
            description = $('#txtDescription').val();
            content =  tinyMCE.get('tinytable').getContent();
            // content = $('#contentSummernote').summernote('code');
            // content = CKEDITOR.instances.contentSummernote.getData();
            category = $('#txtCategory option:selected').val();
            tag = $('#txtTag').select2().val();
            $('#switchStatus')[0].checked ? status = 1: status = 0 ;
            $('#switchIsFuture')[0].checked ? isFeature = 1: isFeature = 0;
            yoastTitle = $('#txtYoastTitle').val();
            yoastDescription = $('#txtYoastDescription').val();
            yoastFocus = $('#txtYoastFocus').val();
            slug = $('#txtSlug').val();
            authorOrigin = $('#txtAuthorOrigin').val();
            lang  = $('#txtLangBlog').val();

            return { title, description, content, category, tag, status, isFeature, yoastTitle, yoastDescription, yoastFocus, slug, authorOrigin, lang };
        }

        let checkValidate = () =>{
            let title, category;
            title = $('#txtTitle').val();
            category = $('#txtCategory option:selected').val();
            if(!title || !category)
                return false;
            return true;
        }

        function change_alias(alias) {
            var str = alias;
            str = str.toLowerCase();
            str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g,"a"); 
            str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g,"e"); 
            str = str.replace(/ì|í|ị|ỉ|ĩ/g,"i"); 
            str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g,"o"); 
            str = str.replace(/"/g, '')
            str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g,"u"); 
            str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g,"y"); 
            str = str.replace(/đ/g,"d");
            str = str.replace(/!|@|%|\^|\*|\(|\)|\+|\=|\<|\>|\?|\/|,|\.|\:|\;|\'|\"|\&|\#|\[|\]|~|\$|_|`|-|{|}|\||\\/g," ");
            str = str.replace(/ + /g," ");
            str = str.trim(); 
            return str;
        }
        
        let convertToSlug = function (plainText){
            const text_converted_alias = change_alias(plainText);
            const text_split_with_space = text_converted_alias.split(' ');
            const text_joined = text_split_with_space.join('-');
            return text_joined;
        }

        <% if (hrefCurrent && hrefCurrent.includes('/admin/add-blog')) { %>
            $('#txtTitle').on('keyup', function(){
                let title = $(this).val();
                let slug = convertToSlug(title);
                $('#txtSlug').val(slug);
            })
        <% } %>

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function(e) {
                    $('#imagePreview').css('background-image', 'url('+e.target.result +')');
                    $('#imagePreview').hide();
                    $('#imagePreview').fadeIn(650);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#imageUpload").change(function() {
            readURL(this);
        });

        $('#btnAdd').on('click', function(){
            let isValid = checkValidate();
            if(!isValid)
                return alert('Vui lòng nhập đủ thông tin.');
            const data = getFormBlog();
            var fd = new FormData();
            var image = $('#imageUpload')[0].files[0];
            fd.append('image', image);
            fd.append('data', JSON.stringify(data));
			console.log(JSON.stringify(data));	
            $.ajax({
                url: `/admin/add-blog`,
                method: 'POST',
                data: fd,
                contentType: false,
                processData: false,
                // beforeSend: function(xhr) {
                //     xhr.setRequestHeader("Authorization", 'Bearer ' + token);
                // },
                success: function(resp) {
                    console.log({ resp })
                    if (resp.error) 
                        return toastr.error("THÊM THẤT BẠI", "THÔNG BÁO");
                    toastr.success("Thêm Thành Công", "THÔNG BÁO");
                    return window.location.href = `/admin/update-blog/${resp.data.slug}`;
                },
                error: function(err) {
                    console.log({loiadd : err})
                    return toastr.error("THÊM THẤT BẠI", "THÔNG BÁO");
                }
            })
        })

        $('#btnUpdate').on('click', function(){
            let isValid = checkValidate();
            if(!isValid)
                return alert('Vui lòng nhập đủ thông tin.');
            let blogSlug = $(this).attr('_slug');
            const data = getFormBlog();
            var fd = new FormData();
            var image = $('#imageUpload')[0].files[0];
            fd.append('image', image);
            fd.append('data', JSON.stringify(data));
            $.ajax({
                url: `/admin/update-blog/${blogSlug}`,
                method: 'POST',
                data: fd,
                contentType: false,
                processData: false,
                // beforeSend: function(xhr) {
                //     xhr.setRequestHeader("Authorization", 'Bearer ' + token);
                // },
                success: function(resp) {
                    if (resp.error) 
                        return toastr.error("CẬP NHẬT THẤT BẠI", "THÔNG BÁO");
                    toastr.success("CẬP NHẬT Thành Công", "THÔNG BÁO");
                    setTimeout(function(){
                        return window.location.href = `/admin/update-blog/${resp.data.slug}`;
                    }, 1000);
                },
                error: function(err) {
                    return toastr.error("CẬP NHẬT THẤT BẠI", "THÔNG BÁO");
                }
            })
        })

    });    
</script>